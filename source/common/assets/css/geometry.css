/*!
 * BEGIN HEADER
 *
 * Contains:        Geometry CSS
 * CVM-Role:        Theme
 * Maintainer:      Hendrik Erz
 * License:         GNU GPL v3
 *
 * Description:     This file contains the main commands and style rules for the
 *                  geometry of the app itself. It sizes and frames the elements
 *                  but does not contain any colours or other styling elements.
 *                  These are located in the theme files.
 *
 *                  The aim of the geometry is that even without any theme all
 *                  elements are positioned correctly. Colouring is the only
 *                  thing that will at that point be missing.
 *
 * END HEADER
 */
@import "../../../node_modules/codemirror/lib/codemirror.css";
@font-face {
  font-family: 'WebHostingHub-Glyphs';
  src: url('../fonts/whh-font/webhostinghub-glyphs.eot');
  src: url('../fonts/whh-font/webhostinghub-glyphs.eot?#iefix') format('embedded-opentype'), url('../fonts/whh-font/webhostinghub-glyphs.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-Light.woff2') format('woff2');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-LightItalic.woff2') format('woff2');
  font-style: italic;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-Heavy.woff2') format('woff2');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Lato';
  src: url('../fonts/lato/Lato-HeavyItalic.woff2') format('woff2');
  font-style: italic;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-Roman.otf') format('otf');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-Italic.otf') format('otf');
  font-style: italic;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-Bold.otf') format('otf');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Crimson';
  src: url('../fonts/crimson/Crimson-BoldItalic.otf') format('otf');
  font-style: italic;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-Regular.woff') format('woff');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-Italic.woff') format('woff');
  font-style: italic;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-Bold.woff') format('woff');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Liberation Mono';
  src: url('../fonts/liberation-mono/LiberationMono-BoldItalic.woff') format('woff');
  font-style: italic;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Inconsolata';
  src: url('../fonts/inconsolata/Inconsolata-Regular.otf') format('otf');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}
@font-face {
  font-family: 'Inconsolata';
  src: url('../fonts/inconsolata/Inconsolata-Bold.otf') format('otf');
  font-style: normal;
  font-weight: bold;
  text-rendering: optimizeLegibility;
}
* {
  margin: 0;
  box-sizing: border-box;
}
html {
  font-size: 1em;
  cursor: default;
}
body {
  overflow: hidden;
  user-select: none;
}
body .dragger {
  cursor: default;
}
input:focus,
select:focus,
textarea:focus,
button:focus {
  outline: 0;
}
#container.blur {
  /* This is applied when a modal is shown */
}
::-webkit-scrollbar {
  width: 10px;
}
::-webkit-scrollbar-thumb {
  border-radius: 10px;
}
.clearfix {
  clear: both;
}
/**
 * Now the import directives to include the geometrical preconditions for all
 * elements.
 */
@keyframes soft-blink {
  0% {
    opacity: 1;
  }
  40% {
    opacity: 1;
  }
  55% {
    opacity: 0;
  }
  85% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.modal {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  overflow-x: hidden;
  /* For longer settings(?) and stuff dialogs */
  overflow-y: auto;
}
.modal .dialog {
  margin: 0 15%;
  padding: 20px;
  /* Mock a <pre>-tag */
}
.modal .dialog h1 {
  font-size: 1.5em;
  margin-bottom: 1.5em;
}
.modal .dialog h1 small {
  font-size: 75%;
}
.modal .dialog span.uuid {
  display: block;
  margin-top: -3em;
  margin-bottom: 1em;
  font-size: 75%;
  user-select: text;
  cursor: text;
}
.modal .dialog h2,
.modal .dialog h3,
.modal .dialog h4,
.modal .dialog h5,
.modal .dialog h6 {
  margin-bottom: 1em;
}
.modal .dialog h2 small,
.modal .dialog h3 small,
.modal .dialog h4 small,
.modal .dialog h5 small,
.modal .dialog h6 small {
  font-size: 75%;
}
.modal .dialog p,
.modal .dialog li {
  line-height: 150%;
}
.modal .dialog ul,
.modal .dialog ol,
.modal .dialog p,
.modal .dialog li {
  margin-bottom: 0.5em;
}
.modal .dialog hr {
  border: none;
  border-bottom-style: solid;
  border-bottom-width: 1px;
  width: 80%;
  margin: 1em 10%;
}
.modal .dialog img {
  max-width: 100%;
  max-height: 100%;
}
.modal .dialog img.image-preview {
  max-height: 50vh;
  display: block;
  margin: 0 auto;
}
.modal .dialog select#app-lang {
  width: 100%;
  margin-left: 0;
  margin-right: 0;
}
.modal .dialog label {
  margin: 1em 0.5em 0.5em 0em;
  display: block;
  cursor: pointer;
  display: inline;
}
.modal .dialog input {
  width: 100%;
  line-height: 150%;
  font-size: inherit;
  outline: none;
  margin-bottom: 1em;
}
.modal .dialog input.inline {
  width: auto;
  display: inline-block;
  margin-bottom: 0;
}
.modal .dialog input.time {
  width: 70px;
  text-align: center;
}
.modal .dialog span.info {
  display: block;
  margin-top: 0em;
  margin-bottom: 1em;
  font-size: 80%;
  line-height: 100%;
}
.modal .dialog input:not(.inline) ~ span.info {
  margin-top: -1em;
}
.modal .dialog select {
  line-height: 200%;
  font-size: inherit;
  padding: 0.5em;
  margin: 0.5em;
}
.modal .dialog input[type="checkbox"],
.modal .dialog input[type="radio"] {
  margin: 0.5em;
  display: inline;
}
.modal .dialog textarea {
  font-size: inherit;
  width: 100%;
  padding: 1em;
  border-radius: 3px;
}
.modal .dialog button,
.modal .dialog a.button {
  display: inline-block;
  font-size: 1em;
  margin: 1em;
  padding: 0.5em 1em;
  cursor: pointer;
  text-decoration: none;
}
.modal .dialog div.input-button-group {
  display: flex;
  margin-bottom: 1em;
}
.modal .dialog div.input-button-group input {
  flex: 0 5 auto;
  margin: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.modal .dialog div.input-button-group button {
  flex: 0 1 auto;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin: 0;
  display: inline-flex;
}
.modal .dialog button.icon {
  display: inline-flex;
  vertical-align: bottom;
  min-height: 28px;
}
.modal .dialog .changelog,
.modal .dialog .code {
  max-height: 300px;
  overflow-y: auto;
  border-radius: 2px;
  padding: 10px;
  margin: 10px 0px;
  user-select: text;
}
.modal .dialog .code {
  white-space: pre;
  font-family: 'Liberation Mono', monospace;
  user-select: text;
}
.modal .dialog div.clear {
  clear: both;
}
.modal .dialog div.box-left,
.modal .dialog div.box-right {
  width: 100%;
  padding: 2%;
}
.modal .dialog .modal-container-constrain-size {
  max-height: 50vh;
  overflow-y: auto;
}
@media (min-width: 800px) {
  .modal .dialog div.box-left,
  .modal .dialog div.box-right {
    width: 50%;
  }
  .modal .dialog div.box-left {
    float: left;
  }
  .modal .dialog div.box-right {
    float: right;
  }
}
.modal .dialog div.paper {
  position: relative;
}
.modal .dialog div.paper.a4paper {
  width: 5em;
  height: 7em;
  margin: 1em auto;
  border: 1px solid black;
}
.modal .dialog div.paper input[type="number"] {
  text-align: center;
  width: 4em;
}
.modal .dialog div.paper input[type="number"]::-webkit-inner-spin-button,
.modal .dialog div.paper input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.modal .dialog div.paper .tmargin,
.modal .dialog div.paper .rmargin,
.modal .dialog div.paper .bmargin,
.modal .dialog div.paper .lmargin {
  position: absolute;
}
.modal .dialog div.paper .tmargin {
  top: -2em;
  margin: 0 0.5em;
}
.modal .dialog div.paper .rmargin {
  right: -4.1em;
  top: 2.5em;
}
.modal .dialog div.paper .bmargin {
  bottom: -2em;
  margin: 0 0.5em;
}
.modal .dialog div.paper .lmargin {
  left: -4.2em;
  top: 2.5em;
}
.modal .dialog div.image-size {
  position: relative;
  height: 9em;
  width: 8em;
  margin: 0 auto;
}
.modal .dialog div.image-size .image {
  width: 6em;
  height: 6em;
  position: absolute;
  top: 0;
  left: 0;
  background-image: url("../img/image-preview.png");
  background-size: contain;
}
.modal .dialog div.image-size #imageWidth {
  width: 6em;
  position: absolute;
  bottom: 10px;
}
.modal .dialog div.image-size #imageHeight {
  width: 6em;
  transform: rotateZ(-90deg);
  position: absolute;
  top: 2.5em;
  left: 4em;
}
.modal .dialog div.image-size #preview-image-sizes {
  display: block;
  position: absolute;
  bottom: 0px;
  left: 1em;
  font-weight: bold;
}
.modal .dialog .pdf-preview {
  max-height: 100%;
  overflow-y: auto;
}
.modal .dialog .error {
  border-radius: 5px;
  margin: 0.5em;
  padding: 1em;
}
.modal .dialog div#prefs-taglist div {
  display: flex;
}
.modal .dialog div#prefs-taglist div input,
.modal .dialog div#prefs-taglist div button {
  flex: 5;
  display: inline;
  margin: 0.5em;
}
.modal .dialog div#prefs-taglist div input[type="color"] {
  flex: 1;
}
.modal .dialog div#prefs-taglist div button {
  flex: 1;
}
.modal .dialog .projects {
  display: flex;
}
.modal .dialog .projects .flex {
  flex: 1;
  padding: 1em;
}
.modal .dialog .projects .flex img {
  width: 100%;
  max-height: 100%;
}
.modal .dialog span#prev-sheet,
.modal .dialog span#next-sheet {
  font-family: 'WebHostingHub-Glyphs';
  font-size: 0.72em;
}
.modal .dialog span#prev-sheet::before {
  content: '\f489';
}
.modal .dialog span#next-sheet::before {
  content: '\f488';
}
.modal .dialog .ui-tabs-nav {
  display: flex;
  flex-wrap: wrap;
  padding: 0;
  margin-bottom: 20px;
}
.modal .dialog .ui-tabs-nav .ui-tabs-tab {
  flex: 1;
  display: inline-block;
  line-height: 200%;
  list-style-type: none;
  margin-bottom: 0;
  padding: 0 6px;
}
.modal .dialog .ui-tabs-nav .ui-tabs-tab a {
  text-decoration: none;
  display: inline-block;
  width: 100%;
  text-align: center;
  outline: none;
  white-space: nowrap;
}
.modal .dialog ul.dicts-list {
  list-style-type: none;
  max-height: 300px;
  overflow-y: auto;
}
.modal .dialog ul.dicts-list li.dicts-list-item {
  display: block;
  cursor: pointer;
  line-height: 1.5em;
  margin: 0;
  padding: 5px;
}
.modal .dialog ul.user-dict {
  list-style-type: none;
  max-height: 300px;
  overflow-y: auto;
}
.modal .dialog ul.user-dict li.user-dict-item {
  display: flex;
  align-items: center;
  cursor: pointer;
  margin: 0;
  padding: 5px;
}
.modal .dialog ul.user-dict li.user-dict-item span {
  flex: 1 0 auto;
}
.modal .dialog ul.user-dict li.user-dict-item clr-icon {
  flex: 0 1 auto;
}
.modal .dialog input.dicts-list-search {
  line-height: 200%;
}
.modal .dialog .selected-dict {
  display: inline-block;
}
.modal .dialog .tag clr-icon {
  vertical-align: text-bottom;
}
#file-list {
  position: absolute;
  top: 0;
  left: 0%;
  bottom: 0;
  width: 100%;
  overflow-y: auto;
  overflow-x: hidden;
  outline: none;
  transition: 0.3s left ease;
}
#file-list.hidden {
  left: 100%;
}
#file-list div.list-item {
  overflow: hidden;
  line-height: 30px;
  padding-left: 6px;
  position: relative;
  /* Taglist stuff */
}
#file-list div.list-item div.meta {
  white-space: nowrap;
  height: 30px;
  line-height: inherit;
}
#file-list div.list-item div.meta .date,
#file-list div.list-item div.meta .id,
#file-list div.list-item div.meta .tags,
#file-list div.list-item div.meta .tex-indicator,
#file-list div.list-item div.meta .directories,
#file-list div.list-item div.meta .files {
  font-size: 75%;
  border-radius: 4px;
  padding: 2px 4px;
  margin-right: 4px;
}
#file-list div.list-item div.meta .target-progress-indicator {
  vertical-align: middle;
  margin: 0 4px;
  transform: rotateZ(-90deg);
}
#file-list div.list-item p.filename {
  white-space: nowrap;
  display: block;
  line-height: 30px;
  width: 100%;
  overflow: hidden;
}
#file-list div.list-item .taglist {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 10px;
  display: flex;
  align-items: center;
  width: 25px;
  justify-content: space-between;
  transition: 0.2s width ease;
}
#file-list div.list-item .taglist .tag {
  height: 25px;
  width: auto;
  margin: 0 auto;
  transition: 0.2s all ease-out;
}
#file-list div.list-item .taglist:hover {
  width: 100%;
  right: 0;
  transition: 0.2s width ease;
}
#file-list div.list-item .taglist:hover .tag {
  width: 25px;
  border-radius: 12.5px;
  transition: 0.2s all ease-in;
}
#file-list div.list-item .taglist .tagspacer {
  flex-grow: 1;
  text-align: center;
  overflow: hidden;
}
#file-list div.list-item .taglist .tagspacer .tag {
  border-top: 2px solid white;
  border-bottom: 2px solid white;
}
#file-list div.list-item .taglist .tagspacer:only-child .tag {
  width: 25px;
  border-radius: 12.5px;
}
#file-list div.list-item .taglist .tagspacer:first-child .tag {
  border-top-left-radius: 12.5px;
  border-bottom-left-radius: 12.5px;
  border-left: 2px solid white;
}
#file-list div.list-item .taglist .tagspacer:last-child .tag {
  border-top-right-radius: 12.5px;
  border-bottom-right-radius: 12.5px;
  border-right: 2px solid white;
}
#file-list div.list-item.directory {
  white-space: nowrap;
}
#file-list div.list-item.directory .sorter {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  text-align: right;
  margin: 0;
}
#file-list div.list-item.directory .sorter .sortDirection,
#file-list div.list-item.directory .sorter .sortType {
  display: inline-block;
  margin: 3px;
}
#file-list .empty-file-list,
#file-list .empty-directory {
  display: block;
  text-align: center;
  padding: 10px;
  margin-top: 50%;
  font-weight: bold;
  font-size: 200%;
}
#file-tree {
  position: absolute;
  top: 0;
  left: 0%;
  width: 100%;
  bottom: 0;
  overflow-y: auto;
  outline: none;
  transition: 0.3s left ease;
}
#file-tree.hidden {
  left: -100%;
}
#file-tree #directories-dirs-header,
#file-tree #directories-files-header {
  height: 1.6em;
  vertical-align: bottom;
  margin-top: 0.8em;
}
#file-tree #directories-dirs-header clr-icon,
#file-tree #directories-files-header clr-icon {
  width: 12px;
  height: 12px;
  margin-left: 3px;
  margin-right: 3px;
  vertical-align: bottom;
}
#file-tree .filename {
  line-height: 1.6em;
  padding: 0.1em 0.4em;
  white-space: nowrap;
  padding-left: 5px;
  margin: 5px 0px;
  overflow: hidden;
}
#file-tree .list-item {
  position: relative;
}
#file-tree .list-item.directory .sorter {
  display: block;
  position: absolute;
  top: 0px;
  right: 0px;
}
#file-tree .list-item.directory .sorter .sortDirection,
#file-tree .list-item.directory .sorter .sortType {
  margin: 5px 3px;
}
#file-tree .list-item.dead-directory > p.filename::before {
  content: '\f5d7';
  font-family: 'WebHostingHub-Glyphs';
  font-size: 0.9em;
  margin-right: 5px;
  display: inline-block;
  position: relative;
  text-align: text-bottom;
}
#file-tree .list-item.display-search-results p.filename::before {
  content: '\f0c5';
  font-family: 'WebHostingHub-Glyphs';
  font-size: 0.72em;
  display: inline-block;
  width: 18px;
}
#file-tree .empty-tree {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  text-align: center;
  cursor: pointer;
}
#file-tree .empty-tree .info {
  display: block;
  padding: 10px;
  margin-top: 50%;
  font-weight: bold;
  font-size: 200%;
}
#sidebar {
  position: fixed;
  top: 39px;
  left: 0;
  width: 20%;
  bottom: 0;
}
#sidebar #component-container {
  position: absolute;
  overflow-x: hidden;
  width: 100%;
  height: 100%;
}
#sidebar.expanded #file-tree,
#sidebar.expanded #file-list {
  width: 50%;
}
#sidebar.expanded #file-list {
  left: 50%;
}
#sidebar.expanded #file-list.hidden {
  left: 50%;
}
#sidebar.expanded #file-tree {
  left: 0%;
}
#sidebar.expanded #file-tree.hidden {
  left: 0%;
}
#sidebar #arrow-button {
  text-align: center;
  vertical-align: middle;
  z-index: 400;
  position: absolute;
  top: 10px;
  left: 10px;
  width: 30px;
  height: 30px;
  transition: 0.4s left ease;
}
#sidebar #arrow-button:before {
  content: '\f305';
  font-family: 'WebHostingHub-Glyphs';
  line-height: 30px;
}
#sidebar #arrow-button.hidden {
  left: -60px;
}
#sidebar #sidebar-resize,
#sidebar #sidebar-inner-resizer {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 10px;
  right: -10px;
  padding: 2px;
  cursor: ew-resize;
}
#sidebar #sidebar-resize::after,
#sidebar #sidebar-inner-resizer::after {
  content: "";
  position: absolute;
  width: 6px;
  height: calc(100% - 4px);
}
#sidebar #sidebar-resize::after,
#sidebar #sidebar-inner-resizer::after {
  border-radius: 10px;
  transition: 0.4s all ease;
}
#sidebar #sidebar-resize:hover::after,
#sidebar #sidebar-inner-resizer:hover::after {
  background-color: rgba(0, 0, 0, 0.4);
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.25);
}
#sidebar #sidebar-inner-resizer {
  left: calc(50% - 5px);
  right: auto;
}
#editor {
  position: fixed;
  top: 39px;
  right: 0;
  bottom: 0;
  left: calc(20% + 10px);
  overflow-x: hidden;
  overflow-y: auto;
}
#editor.fullscreen {
  left: 0%;
  padding-left: 0px;
}
#editor.fullscreen #document-tabs {
  display: none;
}
#editor .ui-resizable-handle {
  position: absolute;
  font-size: 0.1px;
  display: block;
}
#editor .ui-resizable-disabled .ui-resizable-handle,
#editor .ui-resizable-autohide .ui-resizable-handle {
  display: none;
}
#editor .ui-resizable-w {
  cursor: ew-resize;
  width: 10px;
  left: 0px;
  top: 0;
  height: 100%;
  padding: 2px;
}
#editor .ui-resizable-w::after {
  content: "";
  position: absolute;
  width: 6px;
  height: calc(100% - 4px);
}
#editor .CodeMirror {
  height: calc(100% - 25px);
  margin-top: 25px;
  margin-left: 0.5em;
  cursor: text;
  font-family: inherit;
}
@media (min-width: 1025px) {
  #editor .CodeMirror {
    margin-left: 100px;
  }
}
@media (max-width: 1024px) {
  #editor .CodeMirror {
    margin-left: 50px;
  }
}
@media (max-width: 900px) {
  #editor .CodeMirror {
    margin-left: 20px;
  }
}
#editor .CodeMirror-code {
  margin: 5em 0em;
}
@media (max-width: 1024px) {
  #editor .CodeMirror-code {
    margin: 100px 0em;
  }
}
#editor .CodeMirror-code .mute {
  opacity: 0.2;
}
#editor .CodeMirror-scroll {
  padding-right: 5em;
  overflow-x: hidden !important;
  margin-bottom: 0px;
  padding-bottom: 0px;
}
@media (min-width: 1025px) {
  #editor .CodeMirror-scroll {
    padding-right: 100px;
  }
}
@media (max-width: 1024px) {
  #editor .CodeMirror-scroll {
    padding-right: 50px;
  }
}
@media (max-width: 900px) {
  #editor .CodeMirror-scroll {
    padding-right: 20px;
  }
}
#editor .katex {
  font-size: 1.1em;
}
.CodeMirror-fullscreen {
  position: fixed !important;
  margin-top: 0px !important;
  top: 39px;
  left: 0;
  right: 0;
  bottom: 0;
  height: auto;
  z-index: 500;
}
@media (min-width: 1301px) {
  .CodeMirror-fullscreen {
    margin-left: 350px !important;
  }
}
@media (max-width: 1300px) {
  .CodeMirror-fullscreen {
    margin-left: 200px !important;
  }
}
@media (max-width: 1100px) {
  .CodeMirror-fullscreen {
    margin-left: 150px !important;
  }
}
@media (max-width: 1000px) {
  .CodeMirror-fullscreen {
    margin-left: 100px !important;
  }
}
@media (max-width: 800px) {
  .CodeMirror-fullscreen {
    margin-left: 50px !important;
  }
}
@media (min-width: 1301px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 350px !important;
  }
}
@media (max-width: 1300px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 200px !important;
  }
}
@media (max-width: 1100px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 150px !important;
  }
}
@media (max-width: 1000px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 100px !important;
  }
}
@media (max-width: 800px) {
  .CodeMirror-fullscreen .CodeMirror-scroll {
    padding-right: 50px !important;
  }
}
.cm-readability-0 {
  background-color: #81f249;
  color: #444444 !important;
}
.cm-readability-1 {
  background-color: #9df249;
  color: #444444 !important;
}
.cm-readability-2 {
  background-color: #baf249;
  color: #444444 !important;
}
.cm-readability-3 {
  background-color: #d6f249;
  color: #444444 !important;
}
.cm-readability-4 {
  background-color: #f2f249;
  color: #444444 !important;
}
.cm-readability-5 {
  background-color: #f2d649;
  color: #444444 !important;
}
.cm-readability-6 {
  background-color: #f2ba49;
  color: #444444 !important;
}
.cm-readability-7 {
  background-color: #f29d49;
  color: #444444 !important;
}
.cm-readability-8 {
  background-color: #f26549;
  color: #444444 !important;
}
.cm-readability-9 {
  background-color: #f24949;
  color: #444444 !important;
}
.cm-readability-10 {
  background-color: #f24965;
  color: #444444 !important;
}
#document-tabs {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 25px;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  flex-shrink: 0;
  overflow-x: auto;
}
#document-tabs::-webkit-scrollbar {
  display: none;
}
#document-tabs .no-files {
  flex-grow: 1;
  position: relative;
  line-height: 25px;
  text-align: center;
}
#document-tabs .document {
  flex-grow: 1;
  position: relative;
  min-width: 200px;
  line-height: 25px;
  overflow: hidden;
  padding-right: 25px;
}
#document-tabs .document .filename {
  white-space: nowrap;
  overflow-x: hidden;
  display: inline-block;
  position: absolute;
  left: 0px;
  top: 0px;
  right: 25px;
  padding-left: 2px;
}
#document-tabs .document.modified .filename::before {
  content: '* ';
}
#document-tabs .document .close {
  position: absolute;
  right: 0px;
  top: 0px;
  width: 25px;
  height: 25px;
  line-height: 25px;
  text-align: center;
  border-radius: 25px;
  display: inline-block;
}
.CodeMirror-vscrollbar {
  cursor: default;
}
.CodeMirror {
  line-height: 1.4375;
  user-select: text;
  background-color: inherit;
  /* Implement a "fat" cursor for Windows' overwrite mode (Ins key) */
  /* Make the formatting characters and escape sequences nearly invisible */
}
.CodeMirror.CodeMirror-wrap > div:first-child textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  height: 1.4375em !important;
  bottom: -1.4375em !important;
  transform: scaleY(1.1);
}
.CodeMirror .CodeMirror-sizer {
  height: 100%;
}
.CodeMirror.CodeMirror-empty {
  background-image: url('../img/feather.svg');
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
  padding-top: 5em;
}
.CodeMirror pre {
  padding: 0;
}
.CodeMirror input[type="checkbox"] {
  transform: scale(1.2);
  margin: 0.2em;
  vertical-align: middle;
}
.CodeMirror .search-result {
  background-color: yellow !important;
  color: black !important;
  border-radius: 0px !important;
  padding-right: 0px !important;
}
.CodeMirror .cm-table {
  font-family: 'Liberation Mono', monospace;
  font-weight: bold;
}
.CodeMirror .size-header-1 {
  font-size: 2em;
}
.CodeMirror .size-header-1 .CodeMirror-gutter-elt {
  line-height: 1.5em;
}
.CodeMirror .size-header-2 {
  font-size: 1.8em;
}
.CodeMirror .size-header-2 .CodeMirror-gutter-elt {
  line-height: 1.5em;
}
.CodeMirror .size-header-3 {
  font-size: 1.5em;
}
.CodeMirror .size-header-3 .CodeMirror-gutter-elt {
  line-height: 1.4em;
}
.CodeMirror .size-header-4 {
  font-size: 1.3em;
}
.CodeMirror .size-header-4 .CodeMirror-gutter-elt {
  line-height: 1.3em;
}
.CodeMirror .size-header-5 {
  font-size: 1em;
}
.CodeMirror .size-header-6 {
  font-size: 1em;
}
.CodeMirror .cm-comment,
.CodeMirror .cm-formatting-task,
.CodeMirror .cm-fenced-code {
  font-family: 'Liberation Mono', monospace;
}
.CodeMirror .CodeMirror-cursor {
  width: 2px;
  border: 0;
  z-index: 1;
  animation: soft-blink 1s infinite;
}
.CodeMirror .CodeMirror-overwrite .CodeMirror-cursor,
.CodeMirror.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border-top: 2px solid #333;
  border-bottom: 2px solid #333;
  background-color: rgba(0, 0, 0, 0.25);
}
.CodeMirror .cm-formatting-code,
.CodeMirror .cm-formatting-code-block,
.CodeMirror .cm-formatting-quote,
.CodeMirror .cm-formatting-strong,
.CodeMirror .cm-formatting-em,
.CodeMirror .cm-zkn-link-formatting,
.CodeMirror .cm-escape-char {
  opacity: 0.3;
}
.CodeMirror .cm-formatting-quote,
.CodeMirror .cm-formatting-list-ul,
.CodeMirror .cm-formatting-list-ol {
  font-family: 'Liberation Mono', monospace;
}
.CodeMirror #measureWidth {
  position: absolute;
  visibility: hidden;
  height: auto;
  width: auto;
  white-space: nowrap;
}
.CodeMirror #measureMonoWidth {
  font-family: 'Liberation Mono', monospace;
  position: absolute;
  visibility: hidden;
  height: auto;
  width: auto;
  white-space: nowrap;
}
.CodeMirror .cm-tab {
  display: inline;
}
.CodeMirror .cm-url,
.CodeMirror .cm-link {
  text-decoration: none;
}
.CodeMirror .cm-zkn-tag.meta-key,
.CodeMirror .cm-zkn-link.meta-key,
.CodeMirror .cma.meta-key {
  cursor: pointer;
}
.CodeMirror .cm-zkn-tag.meta-key:hover,
.CodeMirror .cm-zkn-link.meta-key:hover,
.CodeMirror a.cma {
  text-decoration: underline;
}
.CodeMirror .cm-zkn-tag {
  font-weight: bold;
}
.CodeMirror .CodeMirror-gutters {
  background-color: transparent;
  border: none;
  left: 0 !important;
}
.CodeMirror .CodeMirror-foldgutter {
  width: 0.7em;
}
.CodeMirror .CodeMirror-foldgutter-open,
.CodeMirror .CodeMirror-foldgutter-folded {
  cursor: pointer;
  font-size: 18px;
}
.CodeMirror .CodeMirror-foldgutter-open:after {
  content: "\25BE";
}
.CodeMirror .CodeMirror-foldgutter-folded:after {
  content: "\25B8";
}
.CodeMirror .CodeMirror-foldmarker {
  border-radius: 3px;
  display: inline-block;
  font-size: 75%;
  margin-left: 10px;
  padding: 2px;
  cursor: pointer;
  vertical-align: baseline;
}
.heading-tag {
  font-size: 20px;
  font-weight: normal;
  cursor: pointer;
  border-radius: 3px;
  padding: 4px;
}
.CodeMirror-hints {
  position: absolute;
  z-index: 10;
  overflow: hidden;
  list-style: none;
  margin: 0;
  padding: 0px;
  max-height: 20em;
  overflow-y: auto;
}
.CodeMirror-hints li.CodeMirror-hint {
  margin: 0;
  white-space: pre;
  cursor: pointer;
  padding: 5px;
  line-height: 150%;
}
.CodeMirror-hints .cm-hint-colour {
  font-weight: bold;
}
.quicklook-standalone,
.print-window {
  position: fixed;
}
.quicklook-standalone .title,
.print-window .title {
  cursor: -webkit-grab;
  -webkit-app-region: drag;
  height: 39px;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  display: flex;
  padding: 0;
  margin: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}
.quicklook-standalone .title h1,
.print-window .title h1 {
  flex-grow: 5;
  display: inline-block;
  padding: 0 1em;
  line-height: 39px;
  white-space: nowrap;
  max-width: 90%;
  overflow: hidden;
}
.quicklook-standalone .title .find,
.print-window .title .find {
  -webkit-app-region: no-drag;
  flex-grow: 4;
  display: inline-block;
  width: 30%;
  float: right;
  height: 100%;
  padding: 0;
  margin: 0;
}
.quicklook-standalone .title .find input,
.print-window .title .find input {
  width: 100%;
  padding: 0.2em 1em;
  margin: 0;
  outline: none;
  border: none;
  height: 100%;
  line-height: 39px;
}
.quicklook-standalone #init-print,
.print-window #init-print {
  padding: 15.6px;
  cursor: pointer;
  -webkit-app-region: no-drag;
  width: 20px;
  height: 39px;
}
.quicklook-standalone #init-print::before,
.print-window #init-print::before {
  font-family: 'WebHostingHub-Glyphs';
  font-size: 23.4px;
  line-height: 0px;
  content: '\f125';
}
.quicklook-standalone .body .CodeMirror,
.print-window .body .CodeMirror {
  cursor: text;
  font-size: 1em;
  font-family: inherit;
  padding: 0.3em;
  height: 100%;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
}
.quicklook-standalone .CodeMirror-scroll .CodeMirror-sizer,
.print-window .CodeMirror-scroll .CodeMirror-sizer {
  margin-bottom: 1em;
}
.quicklook-standalone .quicklook-standalone #editor,
.print-window .quicklook-standalone #editor {
  top: 39px;
}
.quicklook-standalone .print-window .content,
.print-window .print-window .content {
  top: 39px;
  width: 100%;
  height: 100%;
}
body.darwin .quicklook-standalone .title,
body.darwin .print-window .title {
  padding-left: 70px;
}
body.win32 .quicklook-standalone .title,
body.win32 .print-window .title {
  padding-right: 140px;
}
body.linux .quicklook-standalone .title,
body.linux .print-window .title {
  padding-right: 100px;
}
#toolbar {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 39px;
  padding: 0;
  display: flex;
  align-items: center;
  -webkit-app-region: drag;
}
#toolbar > .searchbar,
#toolbar > .file-info,
#toolbar > .button,
#toolbar > svg:not(#search-progress-indicator) {
  -webkit-app-region: no-drag;
}
#toolbar > .searchbar:focus,
#toolbar > .file-info:focus,
#toolbar > .button:focus,
#toolbar > svg:not(#search-progress-indicator):focus {
  outline: 0;
}
#toolbar .button {
  flex-grow: 0.1;
  outline: 0;
  display: inline-block;
  width: 29px;
  height: 29px;
  margin: 5px;
  border-radius: 3px;
  display: flex;
  justify-content: center;
  align-items: center;
}
#toolbar .button clr-icon {
  width: 21px;
  height: 21px;
}
#toolbar .button:first-child {
  margin-left: 10px;
}
#toolbar .button:last-child {
  margin-right: 10px;
}
#toolbar .button.pomodoro {
  padding: 2px;
  background-image: none;
  border: none;
}
#toolbar .button.pomodoro svg {
  transform: rotate(-90deg);
  display: inherit;
  margin: 0 auto;
}
#toolbar .spacer {
  flex-grow: 5;
}
#toolbar .separator {
  flex-grow: 0.3;
  width: 1px;
  text-align: center;
}
#toolbar .separator:before {
  content: "|";
  display: inline;
  font-size: 1.2em;
}
#toolbar .file-info {
  flex-grow: 5;
  text-align: center;
  line-height: 39px;
  white-space: nowrap;
  line-height: 1em;
}
#toolbar .searchbar {
  flex-grow: 5;
}
#toolbar .searchbar input {
  height: 29px;
  width: 90%;
  line-height: 29px;
  padding: 0.2em 1em;
  margin: 5px;
  border-radius: 5px;
  outline: none;
}
#toolbar .searchbar div.end-search {
  position: relative;
  right: 26px;
  width: 0px;
  height: 12px;
  display: inline-block;
  line-height: 11px;
  font-size: 80%;
  text-align: center;
}
body.darwin #toolbar {
  padding-left: 70px;
}
body.win32 #toolbar,
body.linux #toolbar {
  padding-right: 140px;
}
.notify {
  position: fixed;
  display: block;
  right: 15px;
  margin: 0;
  padding: 10px;
  width: 300px;
  overflow: hidden;
  cursor: default;
}
/* * * * * * * * * * * * * *
 *                         *
 *   BEGIN VARIABLES AREA  *
 *                         *
 * * * * * * * * * * * * * */
/* * * * * * * * * * * * * *
 *                         *
 *    END VARIABLES AREA   *
 *                         *
 * * * * * * * * * * * * * */
/* * * * * * * * * * * * * *
 *                         *
 *     BEGIN MIXIN AREA    *
 *                         *
 * * * * * * * * * * * * * */
/* * * * * * * * * * * * * *
 *                         *
 *      END MIXIN AREA     *
 *                         *
 * * * * * * * * * * * * * */
.popup-arrow {
  width: 0;
  height: 0;
  position: fixed;
}
.popup-arrow.up {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom-width: 5px;
  border-bottom-style: solid;
}
.popup-arrow.down {
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top-width: 5px;
  border-top-style: solid;
}
.popup-arrow.left {
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-right-width: 5px;
  border-right-style: solid;
}
.popup-arrow.right {
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left-width: 5px;
  border-left-style: solid;
}
.popup {
  position: fixed;
  max-width: 350px;
  max-height: 600px;
  overflow-y: auto;
  overflow-x: hidden;
}
.popup a.toc-link {
  text-decoration: none;
  display: block;
  line-height: 150%;
  padding: 4px;
  overflow-x: hidden;
  white-space: nowrap;
}
.popup p {
  margin: 10px;
  text-align: center;
}
.popup table {
  vertical-align: middle;
}
.popup table td {
  padding: 4px;
}
.popup button {
  border: none;
  font-size: 200%;
  width: 100%;
  padding: 10px;
  display: block;
  text-align: center;
}
.popup form input {
  padding: 5px;
  font-size: 200%;
  display: block;
  border: none;
  width: 100%;
  text-align: center;
}
.popup form input:focus {
  outline: 0;
}
.popup form input.small {
  font-size: 140%;
  text-align: left;
  width: 350px;
}
.popup form input[type="checkbox"] {
  display: inline-block;
  margin: 5px;
  width: auto;
}
.popup form label {
  display: inline-block;
  margin: 5px;
}
.popup .row {
  display: flex;
}
.popup .table-generator {
  padding: 5px;
}
.popup .table-generator .row .cell {
  flex-grow: 1;
  width: 10px;
  height: 10px;
  margin: 1px;
}
.popup .btn-share {
  flex-grow: 1;
  width: 46px;
  height: 46px;
  line-height: 46px;
  text-align: center;
  transition: 0.2s all ease;
  cursor: default;
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
}
.popup .btn-share.htm {
  background-image: url('../img/html5.svg');
}
.popup .btn-share.htm:hover {
  /* W3C color code */
  background-color: #4eaf57;
}
.popup .btn-share.pdf {
  background-image: url('../img/pdf.svg');
}
.popup .btn-share.pdf:hover {
  /* Adobe reader PDF color code */
  background-color: #fd5e4d;
}
.popup .btn-share.docx {
  background-image: url('../img/docx.svg');
}
.popup .btn-share.docx:hover {
  /* MS Word color code */
  background-color: #396fbe;
}
.popup .btn-share.odt {
  background-image: url('../img/odt.svg');
}
.popup .btn-share.odt,
.popup .btn-share.tex,
.popup .btn-share.plain {
  color: #141414;
}
.popup .btn-share.odt:hover,
.popup .btn-share.tex:hover,
.popup .btn-share.plain:hover {
  background-color: #dcdcdc;
  color: black;
}
.popup .btn-share.revealjs:before,
.popup .btn-share.revealjs-beige:before,
.popup .btn-share.revealjs-black:before,
.popup .btn-share.revealjs-league:before,
.popup .btn-share.revealjs-moon:before,
.popup .btn-share.revealjs-serif:before,
.popup .btn-share.revealjs-sky:before,
.popup .btn-share.revealjs-solarized:before,
.popup .btn-share.revealjs-white:before {
  font-family: 'WebHostingHub-Glyphs';
  content: "\f0c4";
}
.popup .btn-share.revealjs {
  color: #787878;
}
.popup .btn-share.revealjs:before {
  content: '\f50b';
}
.popup .btn-share.revealjs:hover {
  background-color: #282828;
  color: white;
}
.popup .btn-share.revealjs-beige {
  color: #333333;
  background-color: #f7f2d3;
}
.popup .btn-share.revealjs-beige:hover {
  background-color: #e7d87d;
  color: #333333;
}
.popup .btn-share.revealjs-black {
  color: #ffffff;
  background-color: #222222;
}
.popup .btn-share.revealjs-black:hover {
  background-color: #555555;
  color: #ffffff;
}
.popup .btn-share.revealjs-league {
  color: #71e9f4;
  background-color: #555a5f;
}
.popup .btn-share.revealjs-league:hover {
  background-color: #878d93;
  color: #d0f8fb;
}
.popup .btn-share.revealjs-moon {
  color: #268bd2;
  background-color: #002b36;
}
.popup .btn-share.revealjs-moon:hover {
  background-color: #007c9c;
  color: #78b9e6;
}
.popup .btn-share.revealjs-serif {
  color: #383d3d;
  background-color: #f0f1eb;
}
.popup .btn-share.revealjs-serif:hover {
  background-color: #dadccd;
  color: #383d3d;
}
.popup .btn-share.revealjs-sky {
  color: #333333;
  background-color: #add9e4;
}
.popup .btn-share.revealjs-sky:hover {
  background-color: #87c7d7;
  color: #333333;
}
.popup .btn-share.revealjs-solarized {
  color: #657b83;
  background-color: #fdf6e3;
}
.popup .btn-share.revealjs-solarized:hover {
  background-color: #fae7b3;
  color: #657b83;
}
.popup .btn-share.revealjs-white {
  color: #222222;
  background-color: white;
}
.popup .btn-share.revealjs-white:hover {
  background-color: #cccccc;
  color: #222222;
}
.popup .btn-share.rst {
  color: #1c4e62;
}
.popup .btn-share.rst:hover {
  color: white;
  background-color: #1c4e62;
}
.popup .btn-share.rtf {
  color: #df3344;
}
.popup .btn-share.rtf:hover {
  background-color: #df3344;
  color: white;
}
.popup .btn-share.org {
  color: #005268;
}
.popup .btn-share.org:hover {
  background-color: #002a35;
  color: white;
}
.popup .btn-share.textbundle {
  color: #00b58c;
}
.popup .btn-share.textbundle:hover {
  background-color: #00b58c;
  color: white;
}
.popup .btn-share.textpack {
  color: #1400e6;
}
.popup .btn-share.textpack:hover {
  background-color: #0b0080;
  color: white;
}
.popup .icon-block {
  flex-grow: 1;
  width: 25px;
  height: 25px;
  line-height: 25px;
  text-align: center;
  transition: 0.2s all ease;
  cursor: default;
  font-size: 10px;
}
.popup #reveal-themes {
  transition: 0.2s height ease;
  height: 92px;
  overflow: hidden;
}
.popup #reveal-themes.hidden {
  height: 0px;
}
.popup .formatting a {
  text-decoration: none;
  display: block;
  padding: 5px 10px;
}
.popup .formatting a#header-formatting {
  display: flex;
}
.popup .formatting a#header-formatting::before {
  font-family: inherit;
  font-weight: bold;
  padding: 10px 0px;
}
.popup .formatting a span.markdownHeading1,
.popup .formatting a span.markdownHeading2,
.popup .formatting a span.markdownHeading3,
.popup .formatting a span.markdownHeading4,
.popup .formatting a span.markdownHeading5,
.popup .formatting a span.markdownHeading6 {
  display: inline-block;
  padding: 5px 0px;
  flex: 1;
  text-align: center;
  font-weight: bold;
}
.popup .formatting a::before {
  font-family: 'WebHostingHub-Glyphs';
  font-size: 0.72em;
  margin-right: 13px;
  margin-left: 5px;
  width: 20px;
  display: inline-block;
}
.popup .formatting a clr-icon {
  height: 20px;
  width: 20px;
  margin-top: -4px;
  margin-right: 18px;
  margin-bottom: -4px;
}
.popup .formatting #header-formatting.markdownHeading1::before {
  content: "H1";
}
.popup .formatting #header-formatting.markdownHeading2::before {
  content: "H2";
}
.popup .formatting #header-formatting.markdownHeading3::before {
  content: "H3";
}
.popup .formatting #header-formatting.markdownHeading4::before {
  content: "H4";
}
.popup .formatting #header-formatting.markdownHeading5::before {
  content: "H5";
}
.popup .formatting #header-formatting.markdownHeading6::before {
  content: "H6";
}
.popup .formatting .insertFootnote::before {
  content: "\f1eb";
}
.popup .formatting .removeFootnote::before {
  content: "\f1eb";
  text-decoration: line-through;
}
.popup .formatting hr {
  margin: 14px 20px;
  border: none;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}
.popup .search {
  width: 350px;
}
.popup .search .row {
  display: flex;
}
.popup .search input {
  /** flex layout of the search popup:
      * 6 4
      * 6 3 1
      */
  font-size: 100%;
  flex: 0 6 auto;
  text-align: left;
  width: 60%;
  background-color: transparent;
  color: inherit;
  padding: 5px;
  border: none;
}
.popup .search input:focus {
  outline: 0;
}
.popup .search input.regexp {
  font-family: 'Liberation Mono', monospace;
}
.popup .search button {
  width: auto;
  padding: 5px 2px;
  margin: 0px;
  border-radius: 2px;
  overflow: hidden;
  outline: 0;
}
.popup .search button#searchNext {
  flex: 4 4 auto;
}
.popup .search button#replaceNext {
  flex: 2 2 auto;
}
.popup .search button#replaceAll {
  flex: 2 2 auto;
}
.popup .pomodoro p {
  font-size: 2em;
}
.popup .footnote-edit textarea {
  font-size: 1em;
  min-height: 150px;
  border: none;
  width: 250px;
}
.popup .footnote-edit textarea:focus {
  outline: 0;
}
.popup .set-target input[type="number"] {
  display: inline-block;
  font-size: 150%;
  width: 25%;
  padding: 0;
}
.popup .set-target input[type="number"]::-webkit-inner-spin-button,
.popup .set-target input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.popup .set-target select {
  display: inline-block;
  width: 45%;
  font-size: 150%;
  border: none;
  border-radius: 0px;
  background-color: transparent;
  color: inherit;
}
.popup .set-target button[type="submit"] {
  display: inline-block;
  width: 22%;
  font-size: 150%;
  margin: 0 auto;
}
#attachments {
  position: absolute;
  top: 39px;
  right: -20%;
  bottom: 0;
  width: 20%;
  overflow-y: auto;
  overflow-x: hidden;
}
#attachments #open-dir-external {
  padding: 5px;
  border-radius: 3px;
  display: inline-block;
  width: 29px;
  height: 29px;
}
#attachments #open-dir-external clr-icon {
  width: 21px;
  height: 21px;
}
#attachments h1 {
  padding: 10px;
  font-size: 1.2em;
}
#attachments p {
  padding: 10px;
}
#attachments a {
  display: block;
  margin: 10px;
  padding: 4px;
  text-decoration: none;
  color: inherit;
  white-space: nowrap;
}
#attachments a svg {
  width: 24px;
  height: 24px;
  margin-right: 4px;
  vertical-align: bottom;
  margin-bottom: -1px;
}
#attachments div.csl-bib-body div.csl-entry {
  display: list-item;
  list-style-type: square;
  margin: 1em 0.2em 1em 1.8em;
  font-size: 80%;
}
/*
* CHECKBOXES
*/
.cb-toggle {
  position: relative;
  display: inline-block !important;
  width: 36px;
  height: 18px;
  margin: 0 !important;
  padding: 0;
}
.cb-toggle input {
  display: none !important;
}
.cb-toggle .toggle {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transition: 0.4s;
  border-radius: 10px;
  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.25);
}
.cb-toggle .toggle:before {
  position: absolute;
  content: "";
  height: 14px;
  width: 14px;
  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.5);
  left: 2px;
  bottom: 2px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}
.cb-toggle input:checked + .toggle:before {
  transform: translateX(18px);
}
.radio-toggle {
  position: relative;
  display: inline-block !important;
  width: 18px;
  height: 18px;
  margin: 0 !important;
  padding: 0;
}
.radio-toggle input {
  display: none !important;
}
.radio-toggle .toggle {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 10px;
}
.radio-toggle .toggle:before {
  position: absolute;
  content: "";
  height: 10px;
  width: 10px;
  left: 4px;
  bottom: 4px;
  background-color: transparent;
  border-radius: 50%;
  transition: 0.4s;
}
.cb-group {
  margin: 5px;
}
.cb-group > label {
  line-height: 22px;
  vertical-align: middle;
}
.cb-group > input[type="radio"] {
  margin: 0 !important;
}
.cb-group > .cb-toggle {
  margin-right: 0.2em;
}
/*
 * SLIDERS / RANGES
 */
input[type=range] {
  -webkit-appearance: none;
  width: 100%;
}
input[type=range]:focus {
  outline: none;
}
input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 18px;
  cursor: pointer;
  border-radius: 11px;
  padding: 2px;
  box-shadow: inset 0px 0px 5px 0px rgba(0, 0, 0, 0.25);
}
input[type=range]::-webkit-slider-thumb {
  height: 14px;
  width: 14px;
  border-radius: 100%;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: 0px;
  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.5);
}
progress {
  border: 0;
  height: 36px;
  border-radius: 3px;
}
/**
 * This file contains the window controls for Linux and Windows packages. There
 * are none for macOS, as we can make use of the hiddenInset window style to
 * display the traffic lights even with no other chrome around the window.
 */
.linux-window-controls,
.windows-window-controls {
  cursor: default;
  display: none;
  -webkit-app-region: no-drag;
}
body.win32 .windows-window-controls {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
}
body.win32 .windows-window-controls .minimise,
body.win32 .windows-window-controls .resize,
body.win32 .windows-window-controls .close {
  float: left;
  width: 45px;
  height: 31px;
  margin: 1px 1px 0 0;
  text-align: center;
  line-height: 29px;
  transition: background-color 0.2s;
}
body.win32 .windows-window-controls .minimise svg,
body.win32 .windows-window-controls .resize svg,
body.win32 .windows-window-controls .close svg {
  width: 10px;
  height: 10px;
  shape-rendering: crispEdges;
}
body.win32 .windows-window-controls .minimise:hover,
body.win32 .windows-window-controls .resize:hover,
body.win32 .windows-window-controls .close:hover {
  background-color: rgba(255, 255, 255, 0.5);
}
body.win32 .windows-window-controls .close svg polygon {
  transition: fill 0.2s;
}
body.win32 .windows-window-controls .close:hover {
  background-color: rgba(232, 17, 35, 0.9);
}
body.win32 .windows-window-controls .close:hover svg polygon {
  fill: #ffffff;
}
body.linux .linux-window-controls {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  height: 39px;
}
body.linux .linux-window-controls .minimise,
body.linux .linux-window-controls .maximise,
body.linux .linux-window-controls .close {
  display: inline-block;
  padding: 10px;
}
body.linux .linux-window-controls .minimise:before,
body.linux .linux-window-controls .maximise:before,
body.linux .linux-window-controls .close:before {
  font-family: 'WebHostingHub-Glyphs';
}
body.linux .linux-window-controls .minimise:before {
  content: '\2212';
}
body.linux .linux-window-controls .maximise:before {
  content: '\f30f';
}
body.linux .linux-window-controls .close:before {
  content: "\00d7";
}
/*
* This file contains theme mockup styles, as they are rather large and need
* their own space. It includes colouring taken from the variables of the
* respective themes.
*/
div.theme-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
}
div.theme-container div.theme-container-item {
  flex: 1;
  width: 240px;
  padding: 20px;
}
div.theme-mockup {
  width: 200px;
  height: 150px;
  position: relative;
  display: inline-block;
  overflow: hidden;
  border-radius: 5px;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  transition: 0.5s all ease;
  /* Traffic lights */
}
div.theme-mockup:hover {
  transform: scale(1.2);
  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.4);
}
div.theme-mockup div.traffic-lights {
  position: absolute;
  top: 3px;
  left: 3px;
  display: flex;
  width: 30%;
  height: 12px;
  z-index: 9999;
}
div.theme-mockup div.traffic-lights div.traffic-light-close,
div.theme-mockup div.traffic-lights div.traffic-light-min,
div.theme-mockup div.traffic-lights div.traffic-light-full {
  width: 10px;
  height: 10px;
  border-radius: 100%;
  margin: 2px;
}
div.theme-mockup div.traffic-lights div.traffic-light-close {
  background-color: #ee6b60;
}
div.theme-mockup div.traffic-lights div.traffic-light-min {
  background-color: #f6bf50;
}
div.theme-mockup div.traffic-lights div.traffic-light-full {
  background-color: #65cc58;
}
div.theme-mockup div.toolbar {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 20px;
  background-color: #f0f0f0;
}
div.theme-mockup div.file-list {
  position: absolute;
  top: 20px;
  bottom: 0px;
  left: 0px;
  width: 30%;
  display: flex;
  flex-direction: column;
  border-right: 1px solid transparent;
  background-color: rgba(0, 0, 0, 0.2);
}
div.theme-mockup div.file-list div.file-list-item {
  flex: 1;
  border-bottom: 1px solid transparent;
  font-size: 5px;
  /* No border on the last child */
}
div.theme-mockup div.file-list div.file-list-item:last-child {
  border-bottom: none;
}
div.theme-mockup div.editor {
  width: 70%;
  height: 100%;
  position: absolute;
  left: 30%;
  top: 0;
}
div.theme-mockup div.editor p {
  height: 20px;
  font-size: 18px;
  margin-top: 50%;
  text-align: center;
}
#theme-berlin-mockup.theme-mockup {
  background-color: #1cb27e;
}
#theme-berlin-mockup div.file-list {
  border-color: #505050;
}
#theme-berlin-mockup div.editor p {
  color: white;
  font-family: 'Lato', sans-serif;
}
#theme-berlin-mockup div.file-list-item {
  border-color: #505050;
}
#theme-frankfurt-mockup.theme-mockup {
  background-color: #1d75b3;
}
#theme-frankfurt-mockup div.file-list {
  border-color: #c8c8c8;
}
#theme-frankfurt-mockup div.editor p {
  color: white;
  font-family: 'Crimson', serif;
}
#theme-frankfurt-mockup div.file-list-item {
  border-color: #c8c8c8;
}
#theme-bielefeld-mockup.theme-mockup {
  background-color: #ffffdc;
}
#theme-bielefeld-mockup div.file-list {
  border-color: #969696;
}
#theme-bielefeld-mockup div.editor p {
  color: #333;
  font-family: 'Liberation Mono', monospace;
}
#theme-bielefeld-mockup div.file-list div.file-list-item {
  border-color: #969696;
}
#theme-karl-marx-stadt-mockup.theme-mockup {
  background-color: #dc2d2d;
}
#theme-karl-marx-stadt-mockup div.file-list {
  border-color: #969696;
}
#theme-karl-marx-stadt-mockup div.editor p {
  color: #ddd;
  font-family: 'Lato', sans-serif;
}
#theme-karl-marx-stadt-mockup div.file-list div.file-list-item {
  border-color: #969696;
}
#theme-bordeaux-mockup.theme-mockup {
  background-color: #fffff8;
}
#theme-bordeaux-mockup div.file-list {
  border-color: #657b83;
  background-color: #eaeaea;
}
#theme-bordeaux-mockup div.editor p {
  color: #d02325;
  font-family: 'Inconsolata', monospace;
}
#theme-bordeaux-mockup div.file-list div.file-list-item {
  border-color: #657b83;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
